
<%-include('../layout/user/indexHeader')%>	
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #28292a;
            --secondary-color: #4b4c4c;
            --text-dark: #2c3e50;
            --background-light: #f0f4f8;
            --card-background: #ffffff;
            --shadow-subtle: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--background-light);
            color: var(--text-dark);
            line-height: 1.6;
        }

        .order-details-container {
            max-width: 700px;
            margin: 40px auto;
            padding: 30px;
            background-color: transparent;
        }

        .order-header {
            text-align: center;
            margin-bottom: 30px;
            animation: fadeIn 0.5s ease-out;
        }

        .order-header h1 {
            font-size: 2.5rem;
            color: var(--primary-color);
            margin-bottom: 15px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .order-header h1 i {
            color: var(--secondary-color);
        }

        .order-header p {
            font-size: 1rem;
            color: var(--text-dark);
            opacity: 0.7;
        }

        .back-link {
            display: inline-block;
            margin-top: 15px;
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .back-link:hover {
            color: var(--secondary-color);
        }

        .order-summary, .customer-info, .order-items {
            margin-bottom: 30px;
        }

        .order-summary h2, .customer-info h2, .order-items h2 {
            font-size: 1.5rem;
            color: var(--primary-color);
            margin-bottom: 15px;
            border-bottom: 2px solid var(--secondary-color);
            padding-bottom: 10px;
        }

        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
        }

        .summary-item {
            background: var(--card-background);
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: var(--shadow-subtle);
            transition: transform 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .summary-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.3s ease;
        }

        .summary-item:hover::before {
            transform: scaleX(1);
        }

        .summary-item:hover {
            transform: translateY(-5px);
        }

        .summary-item h3 {
            font-size: 1rem;
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .summary-item p {
            font-size: 0.9rem;
            color: var(--text-dark);
            opacity: 0.8;
        }
        .address-box {
            background: var(--card-background);
            padding: 20px;
            border-radius: 10px;
            box-shadow: var(--shadow-subtle);
            line-height: 1.6;
        }

        .items-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .product-item {
            display: flex;
            align-items: center;
            background: var(--card-background);
            padding: 20px;
            border-radius: 10px;
            box-shadow: var(--shadow-subtle);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .product-item::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.3s ease;
        }

        .product-item:hover::before {
            transform: scaleX(1);
        }

        .product-item:hover {
            transform: translateY(-5px);
        }

        .product-item img {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 10px;
            margin-right: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .product-details h3 {
            font-size: 1.2rem;
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .product-details p {
            font-size: 0.9rem;
            color: var(--text-dark);
            opacity: 0.8;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media (max-width: 768px) {
            .order-details-container {
                padding: 15px;
                margin: 20px 10px;
            }

            .summary-grid {
                grid-template-columns: 1fr;
            }

            .product-item {
                flex-direction: column;
                text-align: center;
            }

            .product-item img {
                margin-right: 0;
                margin-bottom: 15px;
            }
        }

        .cancel-button {
            display: inline-block;
            background-color: #e74c3c;
            color: white;
            font-weight: bold;
            text-transform: uppercase;
            padding: 10px 20px;
            margin-top: 20px;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .cancel-button:hover {
            background-color: #c0392b;
            transform: translateY(-2px);
        }

        .cancel-button:active {
            transform: translateY(0);
        }

        .cancel-section {
            text-align: center;
            margin-top: 30px;
        }
        .cancelPro-button{
            background-color: #d64130;
            color: white;
            border-radius: 5px;
            display: inline-block;
            padding: 5px 25px;


        }

        .return-button {
    background-color: #1a1a1bd7;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.return-button:hover {
    background-color: #3f3f3f;
}

.download-btn {
    display: inline-block;
    background-color: #18415c;
    color: #fff; 
    font-size: 14px;
    font-weight: bold;
    padding: 10px 7px;
    border: none;
    border-radius: 5px;
    text-transform: uppercase;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    text-align: center;
}

.download-btn:hover {
    background-color: #2980b9;
    transform: translateY(-3px); 
}

.download-btn:active {
    background-color: #1f618d; 
    transform: translateY(0);
}

.download-btn:focus {
    outline: 2px solid #2980b9; 
    outline-offset: 2px;
}

.returnPro-button {
    background-color: #166499; 
    color: white; 
    border: none; 
    border-radius: 5px; 
    padding: 10px 20px; 
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease; 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); 
}

.returnPro-button:hover {
    background-color: #2980b9; 
    transform: scale(1.05); 
}

.returnPro-button:active {
    background-color: #1c6a9e;
    transform: scale(0.98); 
}

.returnPro-button:disabled {
    background-color: #bdc3c7;
    cursor: not-allowed; 
    box-shadow: none;
}

.cancel-msg {
    color: #e74c3c;
    font-weight: bold;
    margin-top: 10px;
}



    </style>
</head>
<body>
    <div class="order-details-container">
        <header class="order-header">
            <h1><i class="fas fa-shopping-cart"></i>Order #<%= order._id %></h1>
            <p>Placed on: <strong><%= new Date(order.createdAt).toLocaleDateString() %></strong></p>
            <a href="/orders" class="back-link"><i class="fas fa-arrow-left"></i> Back to Orders</a>
        </header>
        <section class="customer-info">
            <h2>Shipping Address</h2>
            <div class="address-box">
                <%order.billingAddress.forEach(ord=>{%>
                <p><strong><%= ord.userName %></strong></p>
                <p><%= ord.street %></p>
                <p><%= ord.city %>, <%= ord.state %> <%= ord.pin %></p>
                <p><%= ord.country %></p>
                <%})%>
            </div>
        </section>

        <section class="customer-info">
            <h2>Order Summary</h2>
            <div class="address-box">
                <p><strong>Total Items:</strong> <%= order.totalQuantity %></p>
                <p><strong>Total Cost:</strong> â‚¹<%= order.totalPrice %></p>
                <p><strong>Payment Method:</strong> <%= order.paymentMethod === 'COD' ? 'Cash on Delivery' : order.paymentMethod %></p>
                <p><strong>Status:</strong> <%= order.status %></p>
                <p><strong>Payment Status:</strong> <%= order.paymentStatus %></p>
        
                <% if (order.status === 'Delivered') { %>
                    <button id="download-btn-invoice" class="download-btn" data-order-id="<%= order._id %>">
                        Download Invoice
                    </button>
                <% } %>
            </div>
        </section>
        

        <section class="order-items">
            <h2>Items in Order</h2>
            <div class="items-list">
                <% order.productItems.forEach(item => { %>
                    <div class="product-item">
                        <img src="/uploads/<%= item.productId.image[0] %>" alt="<%= item.productName %>">
                        <div class="product-details">
                            <h3><%= item.productName %></h3>
                            <p><strong>Quantity:</strong> <%= item.quantity %></p>
                            <p><strong>Price:</strong> â‚¹<%= item.total.toFixed(2) %></p>
                            
                            <% if (order.status === 'Pending' && order.productItems.length > 1) { %>
                                <% if (item.status === 'Cancelled') { %>
                                    <p class="cancel-msg">This item has been cancelled.</p>
                                <% } else { %>
                                    <form action="/orders/cancel-item/<%= order._id %>/<%= item.productId._id %>" method="POST">
                                        <input type="hidden" name="newStatus" value="Cancelled">
                                        <button class="cancelPro-button" data-perticularOrder-id="<%= order._id %>" data-perticulrPro-id="<%= item.productId._id %>">Cancel</button>
                                    </form>
                                <% } %>
                            <% } %>
                            
        
                            <% if (order.status === 'Delivered' && order.productItems.length > 1) { %>
                                <% if (item.status === 'Returned') { %>
                                    <p class="return-msg" style="color: #06678d; font-weight: bold;">This product has already been returned.</p>
                                <% } else { %>
                                    <a href="/productReturn/<%= order._id %>/<%= item.productId._id %>">
                                        <button type="button" class="return-button">Return Product</button>
                                    </a>
                                <% } %>
                            <% } %>
                            
                            
                        </div>
                    </div>
                <% }) %>
            </div>
        </section>
        
        
        <section class="cancel-section">
            <!-- Cancel Entire Order -->
            <% if (order.status === 'Pending' ) { %>
                <form>
                    <button type="button" 
                            class="cancel-button" 
                            data-order-id="<%= order._id %>">
                      Cancel Order
                    </button>
                  </form>
                
            <% } else if (order.status !== 'Returned') { %>
                <p style="color: #239212; font-weight: bold; font-size: 20px;">
                    Your order has been successfully <%= order.status %>.
                </p>
            <% } %>
        
            <!-- Return Entire Order -->
            <% if (order.status === 'Delivered') { %>
                <a href="/orderReturn/<%= order._id %>">
                    <button type="button" class="return-button">Return Order</button>
                </a>
            <% } else if (order.status === 'Returned') { %>
                <p style="color: #06678d; font-weight: bold;">Order has already been returned.</p>
            <% } %>
        </section>
        
        
        
        
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.querySelectorAll('.cancel-button').forEach(button => {
  button.addEventListener('click', async function (e) {
    e.preventDefault();

    const orderId = this.getAttribute('data-order-id');

    Swal.fire({
      title: 'Are you sure?',
      text: 'Do you really want to cancel the entire order?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, cancel it!'
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/orders/cancel/${orderId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
          });

          const result = await response.json();

          if (response.ok && result.success) {
            Swal.fire(
              'Cancelled!',
              'Your order has been cancelled.',
              'success'
            ).then(() => {
              window.location.href = '/cancelPage?success=Order%20canceled%20successfully';
            });
          } else {
            Swal.fire(
              'Error!',
              result.message || 'Could not cancel the order.',
              'error'
            );
          }
        } catch (error) {
          console.error('Cancel Error:', error);
          Swal.fire('Oops!', 'Something went wrong.', 'error');
        }
      }
    });
  });
});
        </script>
        

    <script>
                  document.getElementById('download-btn-invoice').addEventListener('click', function () {
                    const orderId = this.getAttribute('data-order-id')
                    const productId = this.getAttribute('data-product-id')

                    fetch(`/downloadInvoice/${orderId}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/pdf'
                        }
                    })

                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.blob();
                        })
                        .then(blob => {
                            const url = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;
                            a.download = `OrderInvoice.pdf`;
                            document.body.appendChild(a);
                            a.click();
                            a.remove();
                            window.URL.revokeObjectURL(url);
                        })
                        .catch(error => {
                            console.error('There was a problem with the fetch operation:', error);
                        });
                });   
    </script>

    
</body>
</html>

<%-include('../layout/user/footer')%>	