<%-include('../layout/user/indexHeader')%>	

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f8f9fa;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }

        .cart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .cart-title {
            font-size: 28px;
            font-weight: 600;
            color: #333;
        }

        .cart-count {
            background: #0e8a2d;
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 14px;
            margin-left: 10px;
        }

        .cart-grid {
            display: grid;
            grid-template-columns: 1fr 350px;
            gap: 30px;
        }

        .cart-items {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            padding: 25px;
        }

        .cart-item {
            display: grid;
            grid-template-columns: 120px 1fr auto;
            gap: 20px;
            padding: 20px;
            border: 1px solid #eee;
            border-radius: 8px;
            margin-bottom: 20px;
            background: white;
            transition: all 0.3s ease;
        }

        .cart-item:hover {
            border-color: #efb033;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        }

        .item-image {
            width: 120px;
            height: 120px;
            background: #f8f9fa;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            color: #666;
        }

        .item-details {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .item-name {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .item-description {
            color: #666;
            font-size: 14px;
            margin-bottom: 15px;
        }

        .item-controls {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            border: 1px solid #ddd;
            border-radius: 6px;
            overflow: hidden;
        }

        .quantity-btn {
            padding: 8px 12px;
            background: #f8f9fa;
            border: none;
            cursor: pointer;
            font-size: 16px;
            color: #333;
            transition: all 0.2s;
        }

        .quantity-btn:hover {
            background: #e9ecef;
        }

        .quantity-input {
            width: 50px;
            text-align: center;
            border: none;
            border-left: 1px solid #ddd;
            border-right: 1px solid #ddd;
            padding: 8px;
            font-size: 14px;
        }

        .item-price {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            min-width: 100px;
            text-align: right;
        }

        .remove-btn {
            color: #dc3545;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 14px;
            padding: 5px;
            transition: all 0.2s;
        }

        .remove-btn:hover {
            color: #c82333;
            text-decoration: underline;
        }

        .cart-summary {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            padding: 25px;
            height: fit-content;
        }

        .summary-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            color: #666;
        }

        .summary-total {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 2px solid #f0f0f0;
            font-size: 20px;
            font-weight: 600;
            color: #333;
        }

        .checkout-btn {
            display: block;
            width: 100%;
            padding: 15px;
            background: #1f2021;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            margin-top: 20px;
            transition: all 0.3s;
        }

        .checkout-btn:hover {
            background: #434445;
            transform: translateY(-1px);
        }

        .empty-cart {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        .empty-cart h3 {
            font-size: 20px;
            margin-bottom: 10px;
            color: #333;
        }

        .continue-shopping {
            display: inline-block;
            padding: 12px 24px;
            background: #0066cc;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            margin-top: 20px;
            transition: all 0.3s;
        }

        .continue-shopping:hover {
            background: #0052a3;
            transform: translateY(-1px);
        }

        @media (max-width: 968px) {
            .cart-grid {
                grid-template-columns: 1fr;
            }

            .cart-item {
                grid-template-columns: 100px 1fr;
            }

            .item-image {
                width: 100px;
                height: 100px;
            }

            .item-price {
                margin-top: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Cart Header -->
        <div class="cart-header">
            <h1 class="cart-title">Shopping Cart <span class="cart-count"><%= cartItems.length %> Items</span></h1>
        </div>

        <!-- Cart Grid -->
        <div class="cart-grid">
            <!-- Cart Items -->
            <div class="cart-items">
                <% if (cartItems.length > 0) { %>
                    <% cartItems.forEach(item => { %>
                        <div class="cart-item">
                            <div class="item-image">
                                <img src="/uploads/<%= item.productId.image[0] %>" alt="<%= item.productId.name %>" />
                            </div>
                            <div class="item-details">
                                <h3 class="item-name"><%= item.productId.name %></h3>
                                <div class="item-controls">
                                    <div class="quantity-control">
                                        <button class="quantity-btn" 
                                                data-id="<%= item.productId._id %>" 
                                                data-action="decrement">-</button>
                                        <input type="number" 
                                               class="quantity-input" 
                                               id="quantity-<%= item.productId._id %>" 
                                               value="<%= item.quantity %>" 
                                               min="1">
                                        <button class="quantity-btn" 
                                                data-id="<%= item.productId._id %>" 
                                                data-action="increment" 
                                                data-stock="<%= item.productId.stock %>" 
                                                <% if (item.productId.stock === 0) { %> disabled <% } %>>
                                            +
                                        </button>
                                    </div>
                                    <button class="remove-btn" data-id="<%= item.productId._id %>">Remove</button>
                                </div>
                            </div>
                            <div class="item-price">₹<%= item.total.toFixed(2) %></div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p>Your cart is empty. Start shopping!</p>
                <% } %>
            </div>

            <!-- Order Summary -->
            <div class="cart-summary">
                <h2 class="summary-title">Order Summary</h2>
                <div class="summary-item">
                    <span>Subtotal (<%= cartItems.length %> items)</span>
                    <span>₹<%= totalAmount.toFixed(2) %></span>
                </div>
                <div class="summary-total">
                    <span>Total</span>
                    <span>₹<%= totalAmount.toFixed(2) %></span>
                </div>
                <a href="/checkOut">
                    <button class="checkout-btn">Proceed to Checkout</button>
                </a>
            </div>
        </div>

        <!-- Empty Cart State (hidden by default) -->
        <div class="cart-items" style="display: none;">
            <div class="empty-cart">
                <h3>Your cart is empty</h3>
                <p>Looks like you haven't added any items to your cart yet.</p>
                <a href="#" class="continue-shopping">Continue Shopping</a>
            </div>
        </div>
    </div>

    <!-- Include SweetAlert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Handle quantity button clicks
            document.querySelectorAll('.quantity-btn').forEach(button => {
                button.addEventListener('click', async function () {
                    const productId = this.getAttribute('data-id');
                    const action = this.getAttribute('data-action');
                    const stock = parseInt(this.getAttribute('data-stock'), 10);
                    const maxQty = 10; // Maximum allowed quantity
                    const quantityInput = document.querySelector(`#quantity-${productId}`);
                    let currentQuantity = parseInt(quantityInput.value, 10);
    
                    if (action === 'increment') {
                        // Check if the stock is available for increment
                        if (stock <= 0) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Out of Stock',
                                text: `Sorry, this product is out of stock.`,
                                confirmButtonColor: '#ffc107'
                            });
                            return; // Prevent increment if stock is zero
                        }
                        
                        // Check if user tries to exceed max quantity per user
                        if (currentQuantity >= maxQty) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Maximum Quantity Reached',
                                text: `Sorry, only ${maxQty} units allowed.`,
                                confirmButtonColor: '#ffc107'
                            });
                            return; // Prevent increment if it exceeds max quantity
                        }
    
                        // Check if the available stock is less than the quantity user wants to increment to
                        if (currentQuantity >= stock) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Stock Limit Reached',
                                text: `Sorry, only ${stock} units left in stock.`,
                                confirmButtonColor: '#ffc107'
                            });
                            return; // Prevent increment if stock is insufficient
                        }
    
                        currentQuantity++;
                    } else if (action === 'decrement') {
                        if (currentQuantity > 1) {
                            currentQuantity--;
                        } else {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Minimum Quantity Reached',
                                text: 'You must have at least 1 item in your cart.',
                                confirmButtonColor: '#ffc107'
                            });
                            return;
                        }
                    }
    
                    // Update input value
                    quantityInput.value = currentQuantity;
    
                    // Call function to update the quantity in the backend
                    await updateQuantity(productId, currentQuantity);
                });
            });
    
            // Handle remove button clicks
            document.querySelectorAll('.remove-btn').forEach(button => {
                button.addEventListener('click', async () => {
                    const productId = button.getAttribute('data-id');
                    const cartItem = button.closest('.cart-item');
    
                    try {
                        const response = await fetch('/removeFromCart', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId })
                        });
    
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Item Removed',
                                text: 'The item was removed from your cart.',
                                confirmButtonColor: '#28a745'
                            }).then(() => {
                                cartItem.remove();
                                updateCartCount();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Remove Failed',
                                text: data.message,
                                confirmButtonColor: '#d33'
                            });
                        }
                    } catch (error) {
                        console.error('Error removing item:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Something went wrong while removing the item.',
                            confirmButtonColor: '#d33'
                        });
                    }
                });
            });
        });
    
        // Function to update the quantity in the backend
        async function updateQuantity(productId, newQuantity) {
            try {
                const response = await fetch(`/updateCartQuantity/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity: newQuantity })
                });
    
                const data = await response.json();
                if (data.success) {
                    window.location.reload();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Update Failed',
                        text: data.message,
                        confirmButtonColor: '#d33'
                    });
                }
            } catch (error) {
                console.error('Error updating quantity:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong while updating the cart.',
                    confirmButtonColor: '#d33'
                });
            }
        }
    </script>
    
    
</body>


</html>


<%-include('../layout/user/footer')%>	