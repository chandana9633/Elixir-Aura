<%-include('../layout/user/indexHeader')%>	
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Listing</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <style>
        :root {
    --primary-color: #1b1d1c;
    --secondary-color: #efb033;
    --text-gray: #666;
    --border-color: #eee;
    --background-gray: #fafafa;
}

body {
    font-family: Arial, sans-serif;
    background-color: var(--background-gray);
    margin: 0;
    padding: 0;
}

/* Search Section */
.search-container {
    background-color: white;
    padding: 30px 0;
    margin-bottom: 30px;
    border-bottom: 1px solid var(--border-color);
}

.search-input {
    border-radius: 25px;
    padding: 12px 25px;
    font-size: 1.1em;
    border: 1px solid var(--border-color);
    width: 100%;
    box-shadow: none;
    transition: border-color 0.3s ease-in-out;
}

.search-input:focus {
    border-color: var(--primary-color);
    outline: none;
}

.search-btn {
    border-radius: 0 25px 25px 0;
    padding: 12px 25px;
    background-color: var(--primary-color);
    color: white;
    border: none;
    transition: background-color 0.3s ease-in-out;
}

.search-btn:hover {
    background-color: var(--secondary-color);
}

.filter-section {
    border-right: 1px solid var(--border-color);
    padding: 20px;
    background-color: white;
    height: 100%;
}

.filter-heading {
    font-size: 0.9em;
    font-weight: bold;
    color: #333;
    margin-bottom: 15px;
    text-transform: uppercase;
}

.form-check-label {
    font-size: 0.9em;
    color: var(--text-gray);
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.form-check-input {
    accent-color: var(--primary-color);
    cursor: pointer;
}

.form-check-input:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

.filter-divider {
    height: 1px;
    background-color: var(--border-color);
    margin: 20px 0;
}

.count-badge {
    background-color: #f5f5f5;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.8em;
    color: var(--text-gray);
}

.product-card {
    transition: transform 0.3s, box-shadow 0.3s;
    height: 100%;
    background: white;
    border: 1px solid var(--border-color);
    position: relative;
    overflow: hidden;
    border-radius: 5px;
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.sale-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: var(--primary-color);
    color: white;
    padding: 5px 15px;
    border-radius: 3px;
    font-size: 0.9em;
    text-transform: uppercase;
}

.product-img {
    height: 250px;
    object-fit: contain;
    padding: 20px;
    background-color: white;
    border-bottom: 1px solid var(--border-color);
}

.product-title {
    font-size: 1em;
    color: #333;
    margin-bottom: 10px;
    font-weight: 500;
}

.product-brand {
    color: var(--text-gray);
    font-size: 0.9em;
    margin-bottom: 15px;
}

.current-price {
    font-weight: bold;
    color: #333;
    font-size: 1.1em;
}

.original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 0.9em;
    margin-right: 10px;
}

.save-price {
    color: var(--primary-color);
    font-size: 0.9em;
}

.sort-select {
    border-color: var(--border-color);
    color: var(--text-gray);
    padding: 8px 15px;
    font-size: 0.9em;
    border-radius: 5px;
    outline: none;
    transition: border-color 0.3s ease-in-out;
}

.sort-select:focus {
    border-color: var(--primary-color);
}

.results-info {
    color: var(--text-gray);
    font-size: 0.9em;
}

@media (max-width: 768px) {
    .filter-section {
        border-right: none;
        margin-bottom: 20px;
    }

    .product-card {
        margin-bottom: 20px;
    }
}


.pagination {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 20px;
}

.pagination a {
    text-decoration: none;
    padding: 5px 10px;
    background-color: #f1f1f1;
    color: #333;
    border-radius: 5px;
}

.pagination a.active {
    background-color: #b6b1b1;
    color: #fff;
}

.pagination a:hover {
    background-color: #666565;
}


.clear-btn {
    background-color: #333;
    color: #fff; 
    padding: 10px 20px; 
    font-size: 16px;
    border: none; 
    border-radius: 5px; 
    cursor: pointer; 
    transition: background-color 0.3s, transform 0.2s;
}

.clear-btn:hover {
    background-color: #444; 
    transform: translateY(-2px); 
}

.clear-btn:active {
    background-color: #222; 
    transform: translateY(0); 
}

    </style>
</head>
<body>
   <!-- Search Section -->
<div class="search-container">
    <div class="container mt-5">
        <div class="input-group">
            <input type="text" class="form-control search-input" id="inptValue" placeholder="Search products...">
            <button class="btn search-btn" id="searchButton" type="button">
                <i class="bi bi-search"></i>
            </button>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-3 col-md-4">
            <div class="filter-section">
                <button id="clear-all" class="clear-btn">Clear</button>
                <div class="filter-divider"></div>

                <div class="mb-4">
                    <h5 class="filter-heading">Category</h5>
                    <% categories.forEach((category) => { %>
                        <div class="form-check mb-2">
                            <% if(category._id.toString() == selectedCategory){ %>
                                <input class="form-check-input category-filter" checked type="checkbox" id="<%= category._id %>" data-category-id="<%= category._id %>">
                                <% }else{ %>
                                    <input class="form-check-input category-filter" type="checkbox" id="<%= category._id %>" data-category-id="<%= category._id %>">
                                    <% } %> 
                            <label class="form-check-label" for="<%= category._id %>">
                                <%= category.name %>
                            </label>
                        </div>
                    <% }) %>
                </div>
                <div class="filter-divider"></div>

                <div class="mb-4">
                    <h5 class="filter-heading">Price Range</h5>
                    <div class="form-check mb-2">
                        <input class="form-check-input price-filter" type="radio" name="priceRange" id="price1" value="under1000">
                        <label class="form-check-label" for="price1">
                            Under ₹1,000
                        </label>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input price-filter" type="radio" name="priceRange" id="price2" value="1000-1500">
                        <label class="form-check-label" for="price2">
                            ₹1,000 - ₹1,500
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input price-filter" type="radio" name="priceRange" id="price3" value="above1500">
                        <label class="form-check-label" for="price3">
                            Above ₹1,500
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-9 col-md-8">
            <div class="p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <select class="form-select sort-select w-auto" id="sort-select">
                        <option value="popularity">Popularity</option>
                        <option value="priceLowToHigh">Price: Low to High</option>
                        <option value="priceHighToLow">Price: High to Low</option>
                        <option value="avgRatings">Average Ratings</option>
                        <option value="featured">Featured</option>
                        <option value="aToZ">A - Z</option>
                        <option value="zToA">Z - A</option>
                    </select>
                </div>

                <div class="row g-4">
                    <% products.forEach((pro) => { %>
                        <div class="col-lg-4 col-md-6">
                            <div class="card product-card">
                                <% if (pro.stock <= 0) { %>
                                    <span class="sale-badge" style="background-color: red;">Out of Stock</span>
                                <% } else { %>
                                    <span class="sale-badge">Sale</span>
                                <% } %>

                                <div class="wishlist-btn" style="cursor: pointer;" data-product-id="<%- pro._id %>">
                                    <i class="fa fa-heart-o" style="color: #ff6f61; font-size: 24px;"></i>
                                </div>

                                <a href="/loadProductPage/<%= pro._id %>">
                                    <img src="/uploads/<%= pro.image[0] %>" alt="<%= pro.name %>" class="product-img">
                                </a>

                                <div class="card-body">
                                    <h5 class="product-title"><%= pro.name %></h5>

                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="current-price ms-2">₹ <%= pro.price %></span>
                                        </div>
                                    </div>

                                    <div class="mt-3 d-flex justify-content-between">
                                        <% if (pro.stock > 0) { %>
                                            
                                            <button
                                            style="color: #fef0f0;"
                                            class="btn btn-dark btn-sm"
                                            onclick="addToCart('<%= pro._id %>')">
                                            Add to Cart
                                            </button>

                                        <% } else { %>
                                            <button class="btn btn-secondary btn-sm" disabled>Out of Stock</button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>

                <div class="pagination">
                    <% if (currentPage > 1) { %>
                        <a href="/shopPage?page=<%= currentPage - 1 %>">Previous</a>
                    <% } %>

                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <a href="/shopPage?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
                    <% } %>

                    <% if (currentPage < totalPages) { %>
                        <a href="/shopPage?page=<%= currentPage + 1 %>">Next</a>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

   <script>
       document.addEventListener('DOMContentLoaded', () => {
    // Category filter
    document.querySelectorAll('.category-filter').forEach(checkbox => {
        checkbox.addEventListener('change', function () {
            const categoryId = this.getAttribute('data-category-id');
            const isChecked = this.checked;
            const url = new URL(window.location.href);
            
            if (isChecked) {
                url.searchParams.set('category', categoryId);
            } else {
                url.searchParams.delete('category');
            }
            
            window.location.href = url.toString();
        });
    });

    // Price filter
    document.querySelectorAll('.price-filter').forEach(radio => {
        radio.addEventListener('change', function () {
            const priceRange = this.value;
            const url = new URL(window.location.href);

            if (priceRange) {
                url.searchParams.set('priceRange', priceRange);
            } else {
                url.searchParams.delete('priceRange');
            }

            window.location.href = url.toString();
        });
    });

    // Sort functionality
    document.getElementById('sort-select').addEventListener('change', function () {
        const sortBy = this.value;
        const url = new URL(window.location.href);

        url.searchParams.set('sort', sortBy);
        window.location.href = url.toString();
    });

    // Search functionality
    const inputField = document.getElementById('inptValue');
    const searchButton = document.getElementById('searchButton');

    searchButton.addEventListener('click', () => {
        const inputValue = inputField.value.trim();
        if (inputValue !== '') {
            performSearch(inputValue);
        }
    });

    inputField.addEventListener('keypress', (event) => {
        if (event.key === 'Enter') {
            const inputValue = inputField.value.trim();
            if (inputValue !== '') {
                performSearch(inputValue);
            }
        }
    });

    function performSearch(query) {
        const data = new URLSearchParams({ query });

        fetch(`/SearchProduct?${data.toString()}`, { method: 'GET' })
            .then(response => response.json())
            .then(response => {
                if (response.success) {
                    displayProducts(response.products);
                }
            })
            .catch(error => console.error('Error:', error));
    }

    function displayProducts(products) {
    const productsGrid = document.querySelector('.row.g-4');
    productsGrid.innerHTML = '';

    if (products.length === 0) {
        productsGrid.innerHTML = `
            <div class="col-12">
                <div class="no-products">
                    <p>No products found</p>
                </div>
            </div>`;
        return;
    }

    products.forEach(pro => {
        const productHTML = `
            <div class="col-lg-4 col-md-6">
                <div class="card product-card">
                    <!-- Out of Stock Check -->
                    ${pro.stock <= 0
                        ? `<span class="sale-badge" style="background-color: red;">Out of Stock</span>`
                        : `<span class="sale-badge">Sale</span>`}

                    <!-- Wishlist Icon -->
                    <div class="wishlist-icon" style="cursor: pointer;" data-product-id="${pro._id}">
                        <i class="fa fa-heart-o" style="color: #ff6f61; font-size: 24px;"></i>
                    </div>

                    <!-- Product Image -->
                    <a href="/loadProductPage/${pro._id}">
                        <img src="/uploads/${pro.image[0]}" alt="${pro.name}" class="product-img">
                    </a>

                    <div class="card-body">
                        <!-- Product Title -->
                        <h5 class="product-title">${pro.name}</h5>

                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="current-price ms-2">₹ ${pro.price}</span>
                            </div>
                        </div>

                        <div class="mt-3 d-flex justify-content-between">
                            ${pro.stock > 0
                                ? `<button style="color: #fef0f0;" class="btn btn-dark btn-sm add-to-cart-btn" data-product-id="${pro._id}">
                                    Add to Cart
                                   </button>`
                                : `<button class="btn btn-secondary btn-sm" disabled>Out of Stock</button>`}
                        </div>
                    </div>
                </div>
            </div>`;
        productsGrid.innerHTML += productHTML;
    });
}


 });

    </script>


 <script>
    function addToCart(productId) {
        console.log(productId);

        const requestData = { productId };

        fetch('/addCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', 
            },
            body: JSON.stringify(requestData) 
        })
        .then(response => {
            return response.json();
        })
        .then(data => {
            console.log(data);

            if (data.success) {
                Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart!',
                        text: 'The item has been successfully added to your cart.',
                        timer: 2000,
                        showConfirmButton: false,
                    });
            } else {
                Swal.fire({
                    position: "top-end",
                    icon: "error",
                    title: "Failed to add product!! Login / Register Please",
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        })
        .catch(error => {
            Toastify({
                text: "Error occurred while adding item to cart.",
                duration: 3000,
                backgroundColor: "red",
                close: true,
                position: "right",
            }).showToast();
        });
    }
</script>

 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


 <script>
    document.addEventListener('DOMContentLoaded', () => {
        // Add to Cart functionality
        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', async (event) => {
                const productId = event.target.getAttribute('data-product-id');
                try {
                    const response = await fetch('/addCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId })
                    });

                    const result = await response.json();
                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            text: result.message,
                            timer: 2000,
                            showConfirmButton: false,
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Failed to Add!',
                            text: result.message || 'Please Login to add items.',
                            timer: 1500,
                            showConfirmButton: false
                        });
                    }
                } catch (error) {
                    console.error('Error adding to cart:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred. Please try again.',
                        timer: 1500,
                        showConfirmButton: false
                    });
                }
            });
        });
    });
  </script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const wishlistIcons = document.querySelectorAll('.wishlist-btn');
        const wishlistProducts = '<%= JSON.stringify(wishlistProducts) %>' 
    
        wishlistIcons.forEach(icon => {
            const productId = icon.getAttribute('data-product-id');
            const heartIcon = icon.querySelector('i');
    
            // Initialize heart state based on wishlist
            if (wishlistProducts.includes(productId)) {
                heartIcon.classList.remove('fa-heart-o');
                heartIcon.classList.add('fa-heart');
                icon.classList.add('active');
            }
    
            icon.addEventListener('click', async function () {
                const isActive = this.classList.contains('active');
                this.classList.toggle('active');
    
                if (isActive) {
                    heartIcon.classList.remove('fa-heart');
                    heartIcon.classList.add('fa-heart-o');
                } else {
                    heartIcon.classList.remove('fa-heart-o');
                    heartIcon.classList.add('fa-heart');
                }
    
                try {
                    const response = await fetch('/addToWish', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId })
                    });
    
                    const result = await response.json();
    
                    if (!response.ok || !result.success) {
                        console.log('Failed to update wishlist');
                    }
                } catch (error) {
                    console.error('Error updating wishlist:', error);
                }
            });
        });
    });
    </script>
    

  <script>
    document.getElementById('clear-all').addEventListener('click', function() {
    window.location.href = '/shopPage' 
  });
  </script>

 </body>
</html>

<%-include('../layout/user/footer')%>	