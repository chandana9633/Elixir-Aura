
<%-include('../layout/admin/adminHeader')%>

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin: -15px;
    }

    .col-md-4 {
        flex: 0 0 33.333333%;
        max-width: 33.333333%;
        padding: 15px;
    }

    h3 {
        margin-bottom: 20px;
        font-size: 1.5rem;
        color: #040404;
        font-weight: 700;
        text-transform: uppercase;
    }

    .product-list,
    .category-list,
    .brand-list {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .product-item,
    .category-item,
    .brand-item {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product-item {
        display: flex;
        align-items: center;
    }

    .product-image img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
        margin-right: 15px;
    }

    .product-info h4,
    .category-item h4,
    .brand-item h4 {
        margin: 0 0 10px;
        font-size: 1.1rem;
        color: #007bff;
    }

    .price {
        font-weight: bold;
        color: #28a745;
    }

    .chart-container {
        position: relative;
        margin: 20px 0;
        height: 400px;
        width: 100%;
    }

    @media (max-width: 480px) {
        .col-md-4 {
            flex: 0 0 100%;
            max-width: 100%;
            padding: 10px;
        }
    }
</style>

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <a href="/admin/dashboard">
            <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
        </a>
        <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm" data-toggle="modal"
            data-target="#reportModal">
            <i class="fas fa-download fa-sm text-white-50"></i> Generate Report
        </a>
    </div>

    <div class="row my-4">
        <form id="filterForm" method="GET" action="/admin/dashboard-data" class="d-flex align-items-center">
            Filter By
            <select id="filterType" class="form-select me-3 rounded-0 border" style="width: 200px; height: 45px;">
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="yearly">Yearly</option>
            </select>
            <button type="submit" class="btn btn-success text-light rounded-0 border me-4">Filter</button>
        </form>
    </div>

    <div class="modal fade" id="reportModal" tabindex="-1" role="dialog" aria-labelledby="reportModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="reportModalLabel">Generate Sales Report</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <form id="reportForm">
                <div class="form-group">
                  <label for="reportType">Report Type</label>
                  <select class="form-control" id="reportType">
                    <option value="daily">Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="yearly">Yearly</option>
                    <option value="custom">Custom Date Range</option>
                  </select>
                </div>
                <div class="form-group" id="customDateRange" style="display:none;">
                  <label for="startDate">Start Date</label>
                  <input type="date" class="form-control" id="startDate">
                  <label for="endDate" class="mt-2">End Date</label>
                  <input type="date" class="form-control" id="endDate">
                </div>
                <div class="form-group">
                  <label for="downloadFormat">Download Format</label>
                  <select class="form-control" id="downloadFormat">
                    <option value="pdf">PDF</option>
                    <option value="excel">Excel</option>
                  </select>
                </div>
              </form>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" id="generateReport">Generate Report</button>
            </div>
          </div>
        </div>
      </div>
    <div class="chart-container">
        <canvas id="myChart"></canvas>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <h3>Top 5 Selling Products</h3>
                <ul class="product-list">
                    <% if (topProducts && topProducts.length > 0) { %>
                        <% topProducts.forEach(product => { %>
                            <li class="product-item">
                                <div class="product-image">
                                    <img src="/uploads/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                                </div>
                                <div class="product-info">
                                    <h4><%= product.productName %></h4>
                                    <p>Sold: <%= product.totalSales %> units</p>
                                    <p class="price">Price: ₹<%= product.productPrice || '0.00' %></p>
                                </div>
                            </li>
                        <% }); %>
                    <% } else { %>
                        <li>No top-selling products available.</li>
                    <% } %>
                </ul>
            </div>

            <div class="col-md-4">
                <h3>Top Selling Categories</h3>
                <ul class="category-list">
                    <% if (topCategories && topCategories.length > 0) { %>
                        <% topCategories.forEach(category => { %>
                            <li class="category-item">
                                <h4><%= category.categoryName %></h4>
                                <p>Sold: <%= category.totalSales %> units</p>
                            </li>
                        <% }); %>
                    <% } else { %>
                        <li>No top-selling categories available.</li>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>

    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-primary" href="/admin/logout">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/js/sb-admin-2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        let myChart = null;

        document.getElementById('reportType').addEventListener('change', function () {
    const reportType = this.value;
    document.getElementById('customDateRange').style.display = reportType === 'custom' ? 'block' : 'none';
  });

  document.getElementById('generateReport').addEventListener('click', function () {
    const reportType = document.getElementById('reportType').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const downloadFormat = document.getElementById('downloadFormat').value;

    if (reportType === 'custom' && (!startDate || !endDate)) {
      alert('Please select both start and end dates for custom range.');
      return;
    }

    if (reportType === 'custom' && new Date(endDate) < new Date(startDate)) {
      alert('End date cannot be before start date.');
      return;
    }

    fetch('/admin/generateReport', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ reportType, startDate, endDate, downloadFormat }),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to generate report.');
        }
        const contentDisposition = response.headers.get('Content-Disposition') || `attachment; filename="sales_report_${reportType}_${Date.now()}.${downloadFormat}"`;
        const fileName = contentDisposition.split('filename=')[1]?.replace(/"/g, '') || `sales_report_${reportType}_${Date.now()}.${downloadFormat}`;
        return response.blob().then(blob => ({ blob, fileName }));
      })
      .then(({ blob, fileName }) => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = fileName;
        document.body.appendChild(a);
        a.click();
        a.remove();
        window.URL.revokeObjectURL(url);
      })
      .catch(error => {
        console.error('Error generating report:', error);
        alert('Failed to generate report. Please try again.');
      });
  });

        // Chart handling
        async function renderChart(filterType) {
            try {
                const response = await fetch(`/admin/dashboard-data?filterType=${filterType}`);
                if (!response.ok) throw new Error('Failed to fetch chart data');
                const data = await response.json();

                console.log('data is item',data)
                // const labels = data.map(item => item.productName || item.date || 'Unknown');
                const labels = data.map(item => item.productName.slice(0,7) || item.date || 'Unknown');
                const sales = data.map(item => item.totalSales || 0);

                const ctx = document.getElementById('myChart').getContext('2d');

                if (myChart) {
                    myChart.destroy();
                }

                myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: `Sales (${filterType})`,
                            data: sales,
                            backgroundColor: 'rgba(54, 162, 235, 0.5)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Sales Count'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Products'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: `Sales Data - ${filterType.charAt(0).toUpperCase() + filterType.slice(1)}`
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error rendering chart:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            renderChart('daily');
        });

        document.getElementById('filterForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const filterType = document.getElementById('filterType').value;
            renderChart(filterType);
        });
    </script>
</body>
</html>